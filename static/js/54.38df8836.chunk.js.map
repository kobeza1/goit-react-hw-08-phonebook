{"version":3,"file":"static/js/54.38df8836.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactsList.module.css?7ecc","components/Contacts/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","utils/notiflix.js","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section__title\":\"Section_section__title__5once\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <h2 className={css.section__title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"ContactsList_contacts__item__ScRT3\",\"contacts__list\":\"ContactsList_contacts__list__928Nm\",\"contacts__name\":\"ContactsList_contacts__name__rJs3Q\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/auth/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const contactsFiltered = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contacts__list}>\n      {contactsFiltered.map(({ id, name, number }) => {\n        return (\n          <li className={css.contacts__item} key={id}>\n            <p>\n              <span className={css.contacts__name}>{name}</span>\n              {number}\n            </p>\n            <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__title\":\"Filter_filter__title__R1JXX\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filterStore = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const value = event.currentTarget.value;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <p className={css.filter__title}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterStore}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n","import Notiflix, { Notify } from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '320px',\n  position: 'right-top',\n  distance: '10px',\n  failure: {\n    background: '#d22566',\n  },\n});\n\nexport const customNotiflix = text => {\n  Notify.failure(text);\n};\n\nexport default customNotiflix;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"form__label\":\"Form_form__label__Tpt8u\",\"form__input\":\"Form_form__input__qyBih\",\"form__button\":\"Form_form__button__4s6xx\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport customNotiflix from 'utils/notiflix';\nimport { addContact } from 'redux/auth/operations';\nimport { selectContacts } from 'redux/selectors';\nimport css from './Form.module.css';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactsStore = useSelector(selectContacts);\n\n  const handleInput = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    event.preventDefault();\n\n    contactsStore.some(item =>\n      item.name.toLowerCase().includes(contact.name.toLowerCase())\n    )\n      ? customNotiflix('This contact is already in the list')\n      : dispatch(addContact(contact));\n\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.form__label}>\n        Name\n        <input\n          className={css.form__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInput}\n        />\n      </label>\n      <label className={css.form__label}>\n        Number\n        <input\n          className={css.form__input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInput}\n        />\n      </label>\n      <button className={css.form__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { ContactsList } from 'components/Contacts/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { Section } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/auth/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title={'Phonebook'}>\n        <Form />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactsList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Section","title","children","className","css","ContactsList","contacts","useSelector","selectContacts","filter","selectFilter","dispatch","useDispatch","contactsFiltered","contact","name","toLowerCase","includes","map","id","number","type","onClick","deleteContact","Filter","filterStore","value","onChange","event","currentTarget","setFilter","Notiflix","width","position","distance","failure","background","text","Notify","Form","useState","setName","setNumber","contactsStore","handleInput","onSubmit","nanoid","preventDefault","some","item","customNotiflix","addContact","pattern","required","useEffect","fetchContacts"],"sourceRoot":""}